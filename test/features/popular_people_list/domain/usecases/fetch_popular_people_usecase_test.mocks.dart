// Mocks generated by Mockito 5.1.0 from annotations
// in popular_people_app/test/features/popular_people_list/domain/usecases/fetch_popular_people_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:popular_people_app/core/errors/failure.dart' as _i5;
import 'package:popular_people_app/features/popular_people_list/data/models/popular_people_search_result_model.dart'
    as _i6;
import 'package:popular_people_app/features/popular_people_list/domain/repositories/popular_people_repo.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [PopularPeopleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularPeopleRepository extends _i1.Mock
    implements _i3.PopularPeopleRepository {
  MockPopularPeopleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PopularPeopleSearchResultModel>>
      fetchPopularPersonsList(int? pageNo) => (super.noSuchMethod(
          Invocation.method(#fetchPopularPersonsList, [pageNo]),
          returnValue: Future<_i2.Either<_i5.Failure, _i6.PopularPeopleSearchResultModel>>.value(
              _FakeEither_0<_i5.Failure,
                  _i6.PopularPeopleSearchResultModel>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i6.PopularPeopleSearchResultModel>>);
}
