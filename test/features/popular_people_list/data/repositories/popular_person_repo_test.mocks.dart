// Mocks generated by Mockito 5.1.0 from annotations
// in popular_people_app/test/features/popular_people_list/data/repositories/popular_person_repo_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:popular_people_app/core/network/network_info.dart' as _i7;
import 'package:popular_people_app/features/popular_people_list/data/datasources/popular_people_local_data_source.dart'
    as _i5;
import 'package:popular_people_app/features/popular_people_list/data/datasources/popular_people_remote_data_source.dart'
    as _i3;
import 'package:popular_people_app/features/popular_people_list/data/models/popular_people_search_result_model.dart'
    as _i2;
import 'package:popular_people_app/features/popular_people_list/data/models/popular_person_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePopularPeopleSearchResultModel_0 extends _i1.Fake
    implements _i2.PopularPeopleSearchResultModel {}

/// A class which mocks [PopularPeopleRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularPeopleRemoteDataSource extends _i1.Mock
    implements _i3.PopularPeopleRemoteDataSource {
  MockPopularPeopleRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PopularPeopleSearchResultModel> getPopularPersonsList(
          int? pageNo) =>
      (super.noSuchMethod(Invocation.method(#getPopularPersonsList, [pageNo]),
              returnValue: Future<_i2.PopularPeopleSearchResultModel>.value(
                  _FakePopularPeopleSearchResultModel_0()))
          as _i4.Future<_i2.PopularPeopleSearchResultModel>);
}

/// A class which mocks [PopularPeopleLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularPeopleLocalDataSource extends _i1.Mock
    implements _i5.PopularPeopleLocalDataSource {
  MockPopularPeopleLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i6.PopularPersonModel> getPopularPersonsList() => (super.noSuchMethod(
      Invocation.method(#getPopularPersonsList, []),
      returnValue: <_i6.PopularPersonModel>[]) as List<_i6.PopularPersonModel>);
  @override
  _i4.Future<void> storePopularPersonsList(String? personsListJson) =>
      (super.noSuchMethod(
          Invocation.method(#storePopularPersonsList, [personsListJson]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> clearStoredPersonsList() =>
      (super.noSuchMethod(Invocation.method(#clearStoredPersonsList, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
